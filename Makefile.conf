# this is merely a common Makefile multiple implementers can use
# bigger files (in terms of compile time) tend to go to the top,
# so they don't end up as the last compile unit when compiling
# in parallel. But we also want to mix them a little too avoid
# heavy RAM usage peaks. Other than that the order is arbitrary.

INCFILES = \
	sass.h \
	sass/base.h \
	sass/enums.h \
	sass/error.h \
	sass/fwdecl.h \
	sass/getopt.h \
	sass/import.h \
	sass/importer.h \
	sass/function.h \
	sass/compiler.h \
	sass/variable.h \
	sass/traces.h \
	sass/values.h \
	sass/version.h

HPPFILES = \
	ast.hpp \
	ast_css.hpp \
	ast_nodes.hpp \
	ast_def_macros.hpp \
	ast_fwd_decl.hpp \
	ast_helpers.hpp \
	ast_selectors.hpp \
	ast_containers.hpp \
	ast_imports.hpp \
	ast_supports.hpp \
	ast_callable.hpp \
	ast_callables.hpp \
	ast_statements.hpp \
	ast_expressions.hpp \
	ast_values.hpp \
	modules.hpp \
	backtrace.hpp \
	base64vlq.hpp \
	character.hpp \
	charcode.hpp \
	color_maps.hpp \
	constants.hpp \
	cssize.hpp \
	dart_helpers.hpp \
	debugger.hpp \
	emitter.hpp \
	environment.hpp \
	exceptions.hpp \
	settings.hpp \
	memory.hpp \
	memory_config.hpp \
	memory_allocator.hpp \
	memory_pool.hpp \
	shared_ptr.hpp \
	MurmurHash2.hpp \
	eval.hpp \
	extender.hpp \
	extension.hpp \
	file.hpp \
	import.hpp \
	compiler.hpp \
	fn_meta.hpp \
	fn_maps.hpp \
	fn_math.hpp \
	fn_colors.hpp \
	fn_lists.hpp \
	fn_selectors.hpp \
	fn_texts.hpp \
	fn_utils.hpp \
	strings.hpp \
	inspect.hpp \
	terminal.hpp \
	interpolation.hpp \
	logger.hpp \
	json.hpp \
	randomize.hpp \
	mapping.hpp \
	ordered_map.hpp \
	source.hpp \
	sources.hpp \
	output.hpp \
	parser.hpp \
	parser_base.hpp \
	parser_css.hpp \
	parser_expression.hpp \
	parser_media_query.hpp \
	parser_at_root_query.hpp \
	parser_keyframe_selector.hpp \
	parser_sass.hpp \
	parser_scss.hpp \
	parser_selector.hpp \
	parser_stylesheet.hpp \
	permutate.hpp \
	plugins.hpp \
	offset.hpp \
	calculation.hpp \
	css_every.hpp \
	css_invisible.hpp \
	sel_any.hpp \
	sel_bogus.hpp \
	sel_useless.hpp \
	sel_invisible.hpp \
	remove_placeholders.hpp \
	capi_sass.hpp \
	capi_error.hpp \
	capi_traces.hpp \
	capi_import.hpp \
	capi_getopt.hpp \
	capi_importer.hpp \
	capi_compiler.hpp \
	capi_variable.hpp \
	capi_function.hpp \
	capi_values.hpp \
	scanner_string.hpp \
	source_map.hpp \
	source_state.hpp \
	source_span.hpp \
	stylesheet.hpp \
	preloader.hpp \
	units.hpp \
	unicode.hpp \
	hashing.hpp \
	visitor_css.hpp \
	visitor_expression.hpp \
	visitor_selector.hpp \
	visitor_statement.hpp \
	visitor_value.hpp \
	string_utils.hpp \
	callstack.hpp \
	environment_cnt.hpp \
	environment_key.hpp \
	environment_stack.hpp \
	b64/cencode.hpp \
	b64/encode.hpp

SOURCES = \
	ast.cpp \
	ast_css.cpp \
	ast_nodes.cpp \
	ast_values.cpp \
	ast_supports.cpp \
	ast_callables.cpp \
	ast_statements.cpp \
	ast_expressions.cpp \
	ast_sel_cmp.cpp \
	ast_sel_unify.cpp \
	ast_sel_super.cpp \
	ast_sel_weave.cpp \
	ast_selectors.cpp \
	memory_allocator.cpp \
	modules.cpp \
	constants.cpp \
	compiler.cpp \
	fn_meta.cpp \
	fn_maps.cpp \
	fn_math.cpp \
	fn_lists.cpp \
	fn_colors.cpp \
	fn_texts.cpp \
	fn_selectors.cpp \
	color_maps.cpp \
	environment.cpp \
	ast_fwd_decl.cpp \
	file.cpp \
	import.cpp \
	string_utils.cpp \
	logger.cpp \
	strings.cpp \
	json.cpp \
	units.cpp \
	plugins.cpp \
	source.cpp \
	offset.cpp \
	calculation.cpp \
	css_every.cpp \
	css_invisible.cpp \
	sel_any.cpp \
	sel_bogus.cpp \
	sel_useless.cpp \
	sel_invisible.cpp \
	eval.cpp \
	randomize.cpp \
	cssize.cpp \
	extender.cpp \
	extension.cpp \
	stylesheet.cpp \
	preloader.cpp \
	interpolation.cpp \
	parser.cpp \
	parser_css.cpp \
	parser_base.cpp \
	parser_scss.cpp \
	parser_sass.cpp \
	parser_selector.cpp \
	parser_stylesheet.cpp \
	parser_expression.cpp \
	parser_media_query.cpp \
	parser_at_root_query.cpp \
	parser_keyframe_selector.cpp \
	output.cpp \
	inspect.cpp \
	terminal.cpp \
	emitter.cpp \
	scanner_string.cpp \
	remove_placeholders.cpp \
	capi_sass.cpp \
	capi_error.cpp \
	capi_getopt.cpp \
	capi_traces.cpp \
	capi_import.cpp \
	capi_importer.cpp \
	capi_compiler.cpp \
	capi_variable.cpp \
	capi_function.cpp \
	capi_values.cpp \
	character.cpp \
	environment_stack.cpp \
	source_map.cpp \
	source_state.cpp \
	source_span.cpp \
	exceptions.cpp \
	shared_ptr.cpp \
	unicode.cpp \
	cencode.cpp

CSOURCES =
